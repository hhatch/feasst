{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Grand canonical ensemble transition-matrix Monte Carlo\n",
    "\n",
    "In this example, flat histogram methods are employed for a small macrostate range from 0 to 5 particles.\n",
    "To begin, the system is initialized with the minimum number of particles by setting Metropolis acceptance criteria with favorable conditions for adding particles.\n",
    "The Metropolis criteria are then replaced with the flat histogram criteria.\n",
    "At this point, typical analysis from the previous tutorials are added.\n",
    "In addition, we also add checkpoint files, criteria status, and average energy of a given macrostate.\n",
    "Finally, the simulation is run until the requested number of iterations of the flat histogram algorithm are complete.\n",
    "\n",
    "A small macrostate range allows the simulation to run quickly with good sampling, and thus it is an ideal starting point to test the simulations. To begin, read the previous SRSW values from file for comparison."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ln_prob_srsw</th>\n",
       "      <th>ln_prob_srsw_std</th>\n",
       "      <th>u_srsw</th>\n",
       "      <th>u_srsw_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-18.707570</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-2.312265e-10</td>\n",
       "      <td>6.689238e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-14.037373</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-6.057402e-04</td>\n",
       "      <td>6.709198e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-10.050312</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-3.057422e-02</td>\n",
       "      <td>9.649147e-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-6.458921</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-8.992832e-02</td>\n",
       "      <td>1.387472e-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-3.145637</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-1.784571e-01</td>\n",
       "      <td>3.315245e-05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-0.045677</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-2.961920e-01</td>\n",
       "      <td>1.348791e-05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   ln_prob_srsw  ln_prob_srsw_std        u_srsw    u_srsw_std\n",
       "0    -18.707570              0.04 -2.312265e-10  6.689238e-10\n",
       "1    -14.037373              0.04 -6.057402e-04  6.709198e-10\n",
       "2    -10.050312              0.04 -3.057422e-02  9.649147e-06\n",
       "3     -6.458921              0.04 -8.992832e-02  1.387472e-04\n",
       "4     -3.145637              0.04 -1.784571e-01  3.315245e-05\n",
       "5     -0.045677              0.04 -2.961920e-01  1.348791e-05"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import feasst as fst\n",
    "\n",
    "srsw_file = fst.install_dir() + \"/plugin/flat_histogram/test/data/stat150.csv\"\n",
    "ln_prob_srsw = fst.LnProbability(pd.read_csv(srsw_file)[\"lnPI\"].values[:6])\n",
    "ln_prob_srsw.normalize() # normalize to account for a smaller macrostate range\n",
    "df = pd.DataFrame(data=ln_prob_srsw.values(), columns={\"ln_prob_srsw\"})\n",
    "df['ln_prob_srsw_std'] = 0.04\n",
    "df['u_srsw'] = pd.read_csv(srsw_file)[\"energy\"]\n",
    "df['u_srsw_std'] = pd.read_csv(srsw_file)[\"energystd\"]\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import unittest\n",
    "import pyfeasst\n",
    "\n",
    "def run_sample_lj_tm_mc(checkpoint_file_name):\n",
    "    monte_carlo = fst.MonteCarlo()\n",
    "    monte_carlo.add(fst.MakeConfiguration(fst.args({\"cubic_box_length\": \"8\",\n",
    "                                       \"particle_type0\": fst.install_dir() + \"/forcefield/lj.fstprt\"})))\n",
    "    monte_carlo.add(fst.MakePotential(fst.MakeLennardJones()))\n",
    "    monte_carlo.add(fst.MakePotential(fst.MakeLongRangeCorrections()))\n",
    "    monte_carlo.set(fst.MakeThermoParams(fst.args({\"beta\": str(1./1.5), \"chemical_potential\": \"-2.352321\"})))\n",
    "    monte_carlo.set(fst.MakeFlatHistogram(\n",
    "        fst.MakeMacrostateNumParticles(fst.Histogram(fst.args({\"width\": \"1\", \"min\": \"0\", \"max\": \"5\"}))),\n",
    "        fst.MakeTransitionMatrix(fst.args({\"min_sweeps\": \"50\"}))))\n",
    "    monte_carlo.add(fst.MakeTrialTranslate(fst.args({\"weight\": \"0.25\", \"tunable_param\": \"1.\"})))\n",
    "    monte_carlo.add(fst.MakeTrialTransfer(fst.args({\"weight\": \"1\", \"particle_type\": \"0\"})))\n",
    "    monte_carlo.add(fst.MakeLogAndMovie(fst.args({\"steps_per\": str(1e5), \"file_name\": \"lj\"})))\n",
    "    monte_carlo.add(fst.MakeCheckEnergyAndTune(fst.args({\"steps_per\": str(1e5), \"tolerance\": str(1e-8)})))\n",
    "    monte_carlo.add(fst.MakeCriteriaUpdater(fst.args({\"steps_per\": str(1e5)})))\n",
    "    monte_carlo.add(fst.MakeCriteriaWriter(fst.args({\"steps_per\": str(1e5), \"file_name\": \"lj_fh.txt\"})))\n",
    "    monte_carlo.add(fst.MakeEnergy(fst.args({\"file_name\": \"lj_en.txt\", \"steps_per_update\": \"1\",\n",
    "        \"steps_per_write\": str(1e5), \"multistate\": \"true\"})))\n",
    "    monte_carlo.set(fst.MakeCheckpoint(fst.args({\"file_name\": checkpoint_file_name, \"num_hours\": \"0.0001\"})))\n",
    "    monte_carlo.run_until_complete()\n",
    "\n",
    "class TestFlatHistogramLJ(unittest.TestCase):\n",
    "    \"\"\"Test flat histogram grand canonical ensemble Monte Carlo simulations\"\"\"\n",
    "    def test_serial_5max(self):\n",
    "        \"\"\"Compare the free energies and potential energies with the NIST SRSW\n",
    "        https://www.nist.gov/programs-projects/nist-standard-reference-simulation-website\n",
    "        https://mmlapps.nist.gov/srs/LJ_PURE/eostmmc.htm\n",
    "        \"\"\"\n",
    "        # To emulate post-processing, obtain monte_carlo from checkpoint file\n",
    "        checkpoint_file_name='checkpoint.txt'\n",
    "        run_sample_lj_tm_mc(checkpoint_file_name)\n",
    "        monte_carlo = fst.MonteCarlo().deserialize(pyfeasst.read_checkpoint(checkpoint_file_name))\n",
    "\n",
    "        # To compare with previous values, make a deep copy of the FlatHistogram derived class\n",
    "        criteria = fst.FlatHistogram(monte_carlo.criteria())\n",
    "        print('lnpi energy')\n",
    "        for macro in range(criteria.num_states()):\n",
    "            self.assertAlmostEqual(\n",
    "                df[\"ln_prob_srsw\"][macro],\n",
    "                criteria.bias().ln_prob().value(macro),\n",
    "                delta=df[\"ln_prob_srsw_std\"][macro])\n",
    "            energy_analyzer = monte_carlo.analyze(monte_carlo.num_analyzers() - 1)\n",
    "            energy_accumulator = energy_analyzer.analyze(macro).accumulator()\n",
    "            stdev = (df[\"u_srsw_std\"][macro]**2 + energy_accumulator.block_stdev()**2)**(1./2.)\n",
    "            #print(criteria.bias().ln_prob().value(macro), energy_accumulator.average())\n",
    "            self.assertAlmostEqual(\n",
    "                df[\"u_srsw\"][macro],\n",
    "                energy_accumulator.average(),\n",
    "                delta=5*stdev)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "test_serial_5max (__main__.TestFlatHistogramLJ)\n",
      "Compare the free energies and potential energies with the NIST SRSW ... "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 4 µs, sys: 2 µs, total: 6 µs\n",
      "Wall time: 11.4 µs\n",
      "lnpi energy\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ok\n",
      "\n",
      "----------------------------------------------------------------------\n",
      "Ran 1 test in 11.283s\n",
      "\n",
      "OK\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<unittest.main.TestProgram at 0x7ff7a676e430>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Note: any line starting with % is only to be used with ipynb\n",
    "%time\n",
    "unittest.main(argv=[''], verbosity=2, exit=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A number of files should also have been created.\n",
    "If the flat histogram method is sampling perfectly, the simulation performs a random walk along the macrostate.\n",
    "For larger ranges of macrostates, or for more difficult sampling cases, monitoring the macrostate can help you determine what conditions are preventing convergence.\n",
    "For example, a plot of the macrostate as a function of the number of attempts may look like the following:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>volume</th>\n",
       "      <th>p0</th>\n",
       "      <th>beta</th>\n",
       "      <th>state</th>\n",
       "      <th>energy</th>\n",
       "      <th>attempt</th>\n",
       "      <th>TrialTranslate</th>\n",
       "      <th>tunable</th>\n",
       "      <th>TrialAdd</th>\n",
       "      <th>TrialRemove</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-4.358780e-01</td>\n",
       "      <td>100000</td>\n",
       "      <td>0.943786</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>0.044366</td>\n",
       "      <td>0.044385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.127030e-02</td>\n",
       "      <td>200000</td>\n",
       "      <td>0.960806</td>\n",
       "      <td>1.05000</td>\n",
       "      <td>0.694640</td>\n",
       "      <td>0.708879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>-2.802770e-15</td>\n",
       "      <td>300000</td>\n",
       "      <td>0.971389</td>\n",
       "      <td>1.10250</td>\n",
       "      <td>0.807342</td>\n",
       "      <td>0.967410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>400000</td>\n",
       "      <td>0.971608</td>\n",
       "      <td>1.15763</td>\n",
       "      <td>0.812283</td>\n",
       "      <td>0.972804</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>2.021060e-15</td>\n",
       "      <td>500000</td>\n",
       "      <td>0.970708</td>\n",
       "      <td>1.21551</td>\n",
       "      <td>0.814323</td>\n",
       "      <td>0.972938</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>600000</td>\n",
       "      <td>0.967800</td>\n",
       "      <td>1.27628</td>\n",
       "      <td>0.815516</td>\n",
       "      <td>0.975552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>700000</td>\n",
       "      <td>0.970213</td>\n",
       "      <td>1.34010</td>\n",
       "      <td>0.816728</td>\n",
       "      <td>0.973423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>4</td>\n",
       "      <td>-9.691840e-03</td>\n",
       "      <td>800000</td>\n",
       "      <td>0.965229</td>\n",
       "      <td>1.40710</td>\n",
       "      <td>0.808667</td>\n",
       "      <td>0.971636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>-9.192950e-16</td>\n",
       "      <td>900000</td>\n",
       "      <td>0.965878</td>\n",
       "      <td>1.47746</td>\n",
       "      <td>0.811482</td>\n",
       "      <td>0.972543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>1000000</td>\n",
       "      <td>0.965261</td>\n",
       "      <td>1.55133</td>\n",
       "      <td>0.814702</td>\n",
       "      <td>0.974363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-9.914610e-01</td>\n",
       "      <td>1100000</td>\n",
       "      <td>0.966295</td>\n",
       "      <td>1.62889</td>\n",
       "      <td>0.808995</td>\n",
       "      <td>0.973799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-7.500420e-02</td>\n",
       "      <td>1200000</td>\n",
       "      <td>0.964479</td>\n",
       "      <td>1.71034</td>\n",
       "      <td>0.811765</td>\n",
       "      <td>0.973286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>4</td>\n",
       "      <td>-1.878110e-02</td>\n",
       "      <td>1300000</td>\n",
       "      <td>0.964260</td>\n",
       "      <td>1.79586</td>\n",
       "      <td>0.810563</td>\n",
       "      <td>0.974759</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>1400000</td>\n",
       "      <td>0.964481</td>\n",
       "      <td>1.88565</td>\n",
       "      <td>0.809076</td>\n",
       "      <td>0.973104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>1500000</td>\n",
       "      <td>0.963575</td>\n",
       "      <td>1.97993</td>\n",
       "      <td>0.813165</td>\n",
       "      <td>0.974213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-1.514350e-02</td>\n",
       "      <td>1600000</td>\n",
       "      <td>0.960274</td>\n",
       "      <td>2.07893</td>\n",
       "      <td>0.812094</td>\n",
       "      <td>0.974442</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>1700000</td>\n",
       "      <td>0.962626</td>\n",
       "      <td>2.18287</td>\n",
       "      <td>0.811691</td>\n",
       "      <td>0.974380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-6.550770e-02</td>\n",
       "      <td>1800000</td>\n",
       "      <td>0.958405</td>\n",
       "      <td>2.29202</td>\n",
       "      <td>0.811169</td>\n",
       "      <td>0.974205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>1.384420e-15</td>\n",
       "      <td>1900000</td>\n",
       "      <td>0.959859</td>\n",
       "      <td>2.40662</td>\n",
       "      <td>0.819744</td>\n",
       "      <td>0.974073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>4</td>\n",
       "      <td>-7.718180e-01</td>\n",
       "      <td>2000000</td>\n",
       "      <td>0.958547</td>\n",
       "      <td>2.52695</td>\n",
       "      <td>0.809699</td>\n",
       "      <td>0.972554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>2100000</td>\n",
       "      <td>0.961256</td>\n",
       "      <td>2.65330</td>\n",
       "      <td>0.809969</td>\n",
       "      <td>0.975367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-3.437480e-02</td>\n",
       "      <td>2200000</td>\n",
       "      <td>0.960169</td>\n",
       "      <td>2.78596</td>\n",
       "      <td>0.815912</td>\n",
       "      <td>0.974606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-5.451660e-03</td>\n",
       "      <td>2300000</td>\n",
       "      <td>0.961779</td>\n",
       "      <td>2.92526</td>\n",
       "      <td>0.808622</td>\n",
       "      <td>0.972667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>2400000</td>\n",
       "      <td>0.962746</td>\n",
       "      <td>3.07152</td>\n",
       "      <td>0.810340</td>\n",
       "      <td>0.974888</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.503260e-02</td>\n",
       "      <td>2500000</td>\n",
       "      <td>0.959742</td>\n",
       "      <td>3.22510</td>\n",
       "      <td>0.818184</td>\n",
       "      <td>0.974681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>2600000</td>\n",
       "      <td>0.960161</td>\n",
       "      <td>3.38635</td>\n",
       "      <td>0.807131</td>\n",
       "      <td>0.973152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-9.090490e-03</td>\n",
       "      <td>2700000</td>\n",
       "      <td>0.959292</td>\n",
       "      <td>3.55567</td>\n",
       "      <td>0.807801</td>\n",
       "      <td>0.973794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-1.912520e-01</td>\n",
       "      <td>2800000</td>\n",
       "      <td>0.960460</td>\n",
       "      <td>3.73346</td>\n",
       "      <td>0.808358</td>\n",
       "      <td>0.972796</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-5.451660e-03</td>\n",
       "      <td>2900000</td>\n",
       "      <td>0.957076</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.803890</td>\n",
       "      <td>0.973487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>2.938730e-15</td>\n",
       "      <td>3000000</td>\n",
       "      <td>0.958351</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.813740</td>\n",
       "      <td>0.972837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>4</td>\n",
       "      <td>-8.477300e-02</td>\n",
       "      <td>3100000</td>\n",
       "      <td>0.960746</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.810114</td>\n",
       "      <td>0.973426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-5.111030e-02</td>\n",
       "      <td>3200000</td>\n",
       "      <td>0.959443</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.809371</td>\n",
       "      <td>0.972671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>4</td>\n",
       "      <td>-1.888940e-02</td>\n",
       "      <td>3300000</td>\n",
       "      <td>0.960484</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.817021</td>\n",
       "      <td>0.974802</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-7.675900e-02</td>\n",
       "      <td>3400000</td>\n",
       "      <td>0.960333</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.811470</td>\n",
       "      <td>0.973263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>3500000</td>\n",
       "      <td>0.956996</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.810501</td>\n",
       "      <td>0.973758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-8.007440e-03</td>\n",
       "      <td>3600000</td>\n",
       "      <td>0.957236</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.810391</td>\n",
       "      <td>0.970764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.703660e-02</td>\n",
       "      <td>3700000</td>\n",
       "      <td>0.958981</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.810042</td>\n",
       "      <td>0.973365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-5.451660e-03</td>\n",
       "      <td>3800000</td>\n",
       "      <td>0.958747</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.811072</td>\n",
       "      <td>0.973529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-9.325220e-01</td>\n",
       "      <td>3900000</td>\n",
       "      <td>0.959826</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.806793</td>\n",
       "      <td>0.974802</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>4000000</td>\n",
       "      <td>0.955633</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.802321</td>\n",
       "      <td>0.971774</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>5.693470e-15</td>\n",
       "      <td>4100000</td>\n",
       "      <td>0.957031</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.812522</td>\n",
       "      <td>0.973019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-5.451660e-03</td>\n",
       "      <td>4200000</td>\n",
       "      <td>0.955650</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.816567</td>\n",
       "      <td>0.974528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>4300000</td>\n",
       "      <td>0.957876</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.813307</td>\n",
       "      <td>0.973914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-8.650470e-02</td>\n",
       "      <td>4400000</td>\n",
       "      <td>0.952871</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.807906</td>\n",
       "      <td>0.969968</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>4500000</td>\n",
       "      <td>0.957745</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.816832</td>\n",
       "      <td>0.973855</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>4</td>\n",
       "      <td>-7.577050e-02</td>\n",
       "      <td>4600000</td>\n",
       "      <td>0.958625</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.810424</td>\n",
       "      <td>0.974554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>4700000</td>\n",
       "      <td>0.959379</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.814087</td>\n",
       "      <td>0.973287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-2.016440e-02</td>\n",
       "      <td>4800000</td>\n",
       "      <td>0.957857</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.809035</td>\n",
       "      <td>0.974121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.332040e-01</td>\n",
       "      <td>4900000</td>\n",
       "      <td>0.956279</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.814676</td>\n",
       "      <td>0.975094</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>5</td>\n",
       "      <td>-7.386550e-02</td>\n",
       "      <td>5000000</td>\n",
       "      <td>0.958636</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.808721</td>\n",
       "      <td>0.974890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>-4.867530e-15</td>\n",
       "      <td>5100000</td>\n",
       "      <td>0.958584</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.807197</td>\n",
       "      <td>0.973241</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    volume  p0      beta  state        energy  attempt  TrialTranslate  \\\n",
       "0      512   5  0.666667      5 -4.358780e-01   100000        0.943786   \n",
       "1      512   3  0.666667      3 -1.127030e-02   200000        0.960806   \n",
       "2      512   0  0.666667      0 -2.802770e-15   300000        0.971389   \n",
       "3      512   2  0.666667      2 -2.422960e-03   400000        0.971608   \n",
       "4      512   0  0.666667      0  2.021060e-15   500000        0.970708   \n",
       "5      512   1  0.666667      1 -6.057400e-04   600000        0.967800   \n",
       "6      512   1  0.666667      1 -6.057400e-04   700000        0.970213   \n",
       "7      512   4  0.666667      4 -9.691840e-03   800000        0.965229   \n",
       "8      512   0  0.666667      0 -9.192950e-16   900000        0.965878   \n",
       "9      512   1  0.666667      1 -6.057400e-04  1000000        0.965261   \n",
       "10     512   3  0.666667      3 -9.914610e-01  1100000        0.966295   \n",
       "11     512   5  0.666667      5 -7.500420e-02  1200000        0.964479   \n",
       "12     512   4  0.666667      4 -1.878110e-02  1300000        0.964260   \n",
       "13     512   1  0.666667      1 -6.057400e-04  1400000        0.964481   \n",
       "14     512   2  0.666667      2 -2.422960e-03  1500000        0.963575   \n",
       "15     512   5  0.666667      5 -1.514350e-02  1600000        0.960274   \n",
       "16     512   2  0.666667      2 -2.422960e-03  1700000        0.962626   \n",
       "17     512   5  0.666667      5 -6.550770e-02  1800000        0.958405   \n",
       "18     512   0  0.666667      0  1.384420e-15  1900000        0.959859   \n",
       "19     512   4  0.666667      4 -7.718180e-01  2000000        0.958547   \n",
       "20     512   1  0.666667      1 -6.057400e-04  2100000        0.961256   \n",
       "21     512   5  0.666667      5 -3.437480e-02  2200000        0.960169   \n",
       "22     512   3  0.666667      3 -5.451660e-03  2300000        0.961779   \n",
       "23     512   2  0.666667      2 -2.422960e-03  2400000        0.962746   \n",
       "24     512   2  0.666667      2 -1.503260e-02  2500000        0.959742   \n",
       "25     512   2  0.666667      2 -2.422960e-03  2600000        0.960161   \n",
       "26     512   2  0.666667      2 -9.090490e-03  2700000        0.959292   \n",
       "27     512   5  0.666667      5 -1.912520e-01  2800000        0.960460   \n",
       "28     512   3  0.666667      3 -5.451660e-03  2900000        0.957076   \n",
       "29     512   0  0.666667      0  2.938730e-15  3000000        0.958351   \n",
       "30     512   4  0.666667      4 -8.477300e-02  3100000        0.960746   \n",
       "31     512   3  0.666667      3 -5.111030e-02  3200000        0.959443   \n",
       "32     512   4  0.666667      4 -1.888940e-02  3300000        0.960484   \n",
       "33     512   5  0.666667      5 -7.675900e-02  3400000        0.960333   \n",
       "34     512   2  0.666667      2 -2.422960e-03  3500000        0.956996   \n",
       "35     512   2  0.666667      2 -8.007440e-03  3600000        0.957236   \n",
       "36     512   3  0.666667      3 -1.703660e-02  3700000        0.958981   \n",
       "37     512   3  0.666667      3 -5.451660e-03  3800000        0.958747   \n",
       "38     512   5  0.666667      5 -9.325220e-01  3900000        0.959826   \n",
       "39     512   2  0.666667      2 -2.422960e-03  4000000        0.955633   \n",
       "40     512   0  0.666667      0  5.693470e-15  4100000        0.957031   \n",
       "41     512   3  0.666667      3 -5.451660e-03  4200000        0.955650   \n",
       "42     512   1  0.666667      1 -6.057400e-04  4300000        0.957876   \n",
       "43     512   5  0.666667      5 -8.650470e-02  4400000        0.952871   \n",
       "44     512   1  0.666667      1 -6.057400e-04  4500000        0.957745   \n",
       "45     512   4  0.666667      4 -7.577050e-02  4600000        0.958625   \n",
       "46     512   1  0.666667      1 -6.057400e-04  4700000        0.959379   \n",
       "47     512   3  0.666667      3 -2.016440e-02  4800000        0.957857   \n",
       "48     512   3  0.666667      3 -1.332040e-01  4900000        0.956279   \n",
       "49     512   5  0.666667      5 -7.386550e-02  5000000        0.958636   \n",
       "50     512   0  0.666667      0 -4.867530e-15  5100000        0.958584   \n",
       "\n",
       "    tunable  TrialAdd  TrialRemove  \n",
       "0   1.00000  0.044366     0.044385  \n",
       "1   1.05000  0.694640     0.708879  \n",
       "2   1.10250  0.807342     0.967410  \n",
       "3   1.15763  0.812283     0.972804  \n",
       "4   1.21551  0.814323     0.972938  \n",
       "5   1.27628  0.815516     0.975552  \n",
       "6   1.34010  0.816728     0.973423  \n",
       "7   1.40710  0.808667     0.971636  \n",
       "8   1.47746  0.811482     0.972543  \n",
       "9   1.55133  0.814702     0.974363  \n",
       "10  1.62889  0.808995     0.973799  \n",
       "11  1.71034  0.811765     0.973286  \n",
       "12  1.79586  0.810563     0.974759  \n",
       "13  1.88565  0.809076     0.973104  \n",
       "14  1.97993  0.813165     0.974213  \n",
       "15  2.07893  0.812094     0.974442  \n",
       "16  2.18287  0.811691     0.974380  \n",
       "17  2.29202  0.811169     0.974205  \n",
       "18  2.40662  0.819744     0.974073  \n",
       "19  2.52695  0.809699     0.972554  \n",
       "20  2.65330  0.809969     0.975367  \n",
       "21  2.78596  0.815912     0.974606  \n",
       "22  2.92526  0.808622     0.972667  \n",
       "23  3.07152  0.810340     0.974888  \n",
       "24  3.22510  0.818184     0.974681  \n",
       "25  3.38635  0.807131     0.973152  \n",
       "26  3.55567  0.807801     0.973794  \n",
       "27  3.73346  0.808358     0.972796  \n",
       "28  3.92013  0.803890     0.973487  \n",
       "29  3.92013  0.813740     0.972837  \n",
       "30  3.92013  0.810114     0.973426  \n",
       "31  3.92013  0.809371     0.972671  \n",
       "32  3.92013  0.817021     0.974802  \n",
       "33  3.92013  0.811470     0.973263  \n",
       "34  3.92013  0.810501     0.973758  \n",
       "35  3.92013  0.810391     0.970764  \n",
       "36  3.92013  0.810042     0.973365  \n",
       "37  3.92013  0.811072     0.973529  \n",
       "38  3.92013  0.806793     0.974802  \n",
       "39  3.92013  0.802321     0.971774  \n",
       "40  3.92013  0.812522     0.973019  \n",
       "41  3.92013  0.816567     0.974528  \n",
       "42  3.92013  0.813307     0.973914  \n",
       "43  3.92013  0.807906     0.969968  \n",
       "44  3.92013  0.816832     0.973855  \n",
       "45  3.92013  0.810424     0.974554  \n",
       "46  3.92013  0.814087     0.973287  \n",
       "47  3.92013  0.809035     0.974121  \n",
       "48  3.92013  0.814676     0.975094  \n",
       "49  3.92013  0.808721     0.974890  \n",
       "50  3.92013  0.807197     0.973241  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_csv(\"lj.txt\", header=0).dropna(axis='columns')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that states are index integer values starting from 0 (e.g., 0, 1, 2, ..., criteria.num_states() - 1)\n",
    "The state and macrostate happen to be the same when the minimum macrostate is 0, and the macrostate is the integer number of particles.\n",
    "But if the minimum macrostate was 1, then state 0 would correspond to macrostate 1.0.\n",
    "Obtain an arbitrary macrostate value from the state as follows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "state macrostate\n",
      "0 0.0\n",
      "1 1.0\n",
      "2 2.0\n",
      "3 3.0\n",
      "4 4.0\n",
      "5 5.0\n"
     ]
    }
   ],
   "source": [
    "monte_carlo = fst.MonteCarlo().deserialize(pyfeasst.read_checkpoint(\"checkpoint.txt\"))\n",
    "criteria = fst.FlatHistogram(monte_carlo.criteria())\n",
    "print('state macrostate')\n",
    "for state in range(criteria.num_states()):\n",
    "    print(state, criteria.macrostate().value(state))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Many simulation parameters may be obtained from the checkpoint file to automate your analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "volume 512.0\n",
      "beta 0.6666666666666666\n",
      "beta_mu -1.5682139999999998\n",
      "macro_min 0.0\n",
      "macro_max 5.0\n",
      "macro_max 5.0\n"
     ]
    }
   ],
   "source": [
    "print('volume', monte_carlo.configuration().domain().volume())\n",
    "print('beta', monte_carlo.thermo_params().beta())\n",
    "print('beta_mu', monte_carlo.thermo_params().beta_mu())\n",
    "print('macro_min', criteria.macrostate().value(0))  # monte_carlo.critera() doesn't know macrostate. Use copy of derived class\n",
    "print('macro_max', criteria.macrostate().value(criteria.num_states() - 1))\n",
    "print('macro_max', criteria.macrostate().histogram().center_of_last_bin())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The energy of each macrostate may also be compared with the published values in the NIST SRSW."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u</th>\n",
       "      <th>u_std</th>\n",
       "      <th>u_srsw</th>\n",
       "      <th>u_srsw_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8.362240e-17</td>\n",
       "      <td>3.496062e-16</td>\n",
       "      <td>-2.312265e-10</td>\n",
       "      <td>6.689238e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>2.174108e-12</td>\n",
       "      <td>-6.057402e-04</td>\n",
       "      <td>6.709198e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-3.022146e-02</td>\n",
       "      <td>1.914936e-04</td>\n",
       "      <td>-3.057422e-02</td>\n",
       "      <td>9.649147e-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-8.944287e-02</td>\n",
       "      <td>6.205232e-04</td>\n",
       "      <td>-8.992832e-02</td>\n",
       "      <td>1.387472e-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-1.776325e-01</td>\n",
       "      <td>1.183672e-03</td>\n",
       "      <td>-1.784571e-01</td>\n",
       "      <td>3.315245e-05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-2.975943e-01</td>\n",
       "      <td>1.263983e-03</td>\n",
       "      <td>-2.961920e-01</td>\n",
       "      <td>1.348791e-05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              u         u_std        u_srsw    u_srsw_std\n",
       "0  8.362240e-17  3.496062e-16 -2.312265e-10  6.689238e-10\n",
       "1 -6.057400e-04  2.174108e-12 -6.057402e-04  6.709198e-10\n",
       "2 -3.022146e-02  1.914936e-04 -3.057422e-02  9.649147e-06\n",
       "3 -8.944287e-02  6.205232e-04 -8.992832e-02  1.387472e-04\n",
       "4 -1.776325e-01  1.183672e-03 -1.784571e-01  3.315245e-05\n",
       "5 -2.975943e-01  1.263983e-03 -2.961920e-01  1.348791e-05"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "en = pd.read_csv(\"lj_en.txt\").rename(columns={\"average\": \"u\", \"block_stdev\": \"u_std\"})\n",
    "pd.concat([pd.DataFrame(en[[\"u\", \"u_std\"]]), df[[\"u_srsw\", \"u_srsw_std\"]]], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You may also compare the natural logarithm of the macrostate probability"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ln_prob_srsw</th>\n",
       "      <th>ln_prob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-18.707570</td>\n",
       "      <td>-18.708853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-14.037373</td>\n",
       "      <td>-14.036188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-10.050312</td>\n",
       "      <td>-10.047908</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-6.458921</td>\n",
       "      <td>-6.456178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-3.145637</td>\n",
       "      <td>-3.143491</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-0.045677</td>\n",
       "      <td>-0.045779</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   ln_prob_srsw    ln_prob\n",
       "0    -18.707570 -18.708853\n",
       "1    -14.037373 -14.036188\n",
       "2    -10.050312 -10.047908\n",
       "3     -6.458921  -6.456178\n",
       "4     -3.145637  -3.143491\n",
       "5     -0.045677  -0.045779"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.concat([df[\"ln_prob_srsw\"], pd.read_csv(\"lj_fh.txt\", header=1)['ln_prob']], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The macrostate probability distribution depends upon the choice of the chemical potential, but can be reweighted to different chemical potentials.\n",
    "The collection matrix may be accessed directly as:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "((0.0, 490658.0, 327110.0), (3069.581954269688, 491835.8487120219, 326024.5693312088), (6104.062418983776, 495331.5028214753, 328145.43476144026), (9169.333423416996, 501944.48620484327, 330625.1803712205), (12160.1071825707, 506374.6668414039, 331579.22597497044), (16547.69186126913, 558631.3134046715, 364688.9947327478))\n"
     ]
    }
   ],
   "source": [
    "tm = fst.TransitionMatrix(criteria.bias())\n",
    "print(tm.collection().matrix())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Did this tutorial work as expected? Did you find any inconsistencies or have any comments? Please [contact](../../../CONTACT.rst) us. Any feedback is appreciated!"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
