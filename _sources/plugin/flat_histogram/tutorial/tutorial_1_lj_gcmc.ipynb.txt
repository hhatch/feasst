{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Grand canonical ensemble transition-matrix Monte Carlo\n",
    "\n",
    "In this example, flat histogram methods are employed for a small macrostate range from 0 to 5 particles.\n",
    "Flat histogram acceptance criteria and Monte Carlo are defined using `fh.py`.\n",
    "To begin, the system is initialized with the minimum number of particles by setting Metropolis acceptance criteria with favorable conditions for adding particles.\n",
    "The Metropolis criteria are then replaced with the flat histogram criteria.\n",
    "At this point, typical analysis from the previous tutorials are added.\n",
    "In addition, we also add checkpoint files, criteria status, and average energy of a given macrostate.\n",
    "Finally, the simulation is run until the requested number of iterations of the flat histogram algorithm are complete.\n",
    "\n",
    "A small macrostate range allows the simulation to run quickly with good sampling, and thus it is an ideal starting point to test the simulations. To begin, read the previous SRSW values from file for comparison."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ln_prob_srsw</th>\n",
       "      <th>ln_prob_srsw_std</th>\n",
       "      <th>u_srsw</th>\n",
       "      <th>u_srsw_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-18.707570</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-2.312265e-10</td>\n",
       "      <td>6.689238e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-14.037373</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-6.057402e-04</td>\n",
       "      <td>6.709198e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-10.050312</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-3.057422e-02</td>\n",
       "      <td>9.649147e-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-6.458921</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-8.992832e-02</td>\n",
       "      <td>1.387472e-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-3.145637</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-1.784571e-01</td>\n",
       "      <td>3.315245e-05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-0.045677</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-2.961920e-01</td>\n",
       "      <td>1.348791e-05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   ln_prob_srsw  ln_prob_srsw_std        u_srsw    u_srsw_std\n",
       "0    -18.707570              0.04 -2.312265e-10  6.689238e-10\n",
       "1    -14.037373              0.04 -6.057402e-04  6.709198e-10\n",
       "2    -10.050312              0.04 -3.057422e-02  9.649147e-06\n",
       "3     -6.458921              0.04 -8.992832e-02  1.387472e-04\n",
       "4     -3.145637              0.04 -1.784571e-01  3.315245e-05\n",
       "5     -0.045677              0.04 -2.961920e-01  1.348791e-05"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import feasst as fst\n",
    "\n",
    "ln_prob_srsw = fst.LnProbability(pd.read_csv(\"../test/data/stat150.csv\")[\"lnPI\"].values[:6])\n",
    "ln_prob_srsw.normalize() # normalize to account for a smaller macrostate range\n",
    "df = pd.DataFrame(data=ln_prob_srsw.values(), columns={\"ln_prob_srsw\"})\n",
    "df['ln_prob_srsw_std'] = 0.04\n",
    "df['u_srsw'] = pd.read_csv(\"../test/data/stat150.csv\")[\"energy\"]\n",
    "df['u_srsw_std'] = pd.read_csv(\"../test/data/stat150.csv\")[\"energystd\"]\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import unittest\n",
    "import pyfeasst\n",
    "\n",
    "def run_sample_lj_tm_mc(checkpoint_file_name):\n",
    "    monte_carlo = fst.MonteCarlo()\n",
    "    monte_carlo.set(fst.lennard_jones(fst.args({\"cubic_box_length\": \"8\"})))\n",
    "    monte_carlo.set(fst.MakeFlatHistogram(\n",
    "        fst.MakeMacrostateNumParticles(fst.Histogram(fst.args({\"width\": \"1\", \"min\": \"0\", \"max\": \"5\"}))),\n",
    "        fst.MakeTransitionMatrix(fst.args({\"min_sweeps\": \"50\"})),\n",
    "        fst.args({\"beta\": str(1./1.5), \"chemical_potential\": \"-2.352321\"})))\n",
    "    monte_carlo.add(fst.MakeTrialTranslate(fst.args({\"weight\": \"0.25\", \"tunable_param\": \"1.\"})))\n",
    "    monte_carlo.add(fst.MakeTrialTransfer(fst.args({\"weight\": \"1\", \"particle_type\": \"0\"})))\n",
    "    monte_carlo.add(fst.MakeLogAndMovie(fst.args({\"steps_per\": str(1e5), \"file_name\": \"lj\"})))\n",
    "    monte_carlo.add(fst.MakeCheckEnergyAndTune(fst.args({\"steps_per\": str(1e5), \"tolerance\": str(1e-8)})))\n",
    "    monte_carlo.add(fst.MakeCriteriaUpdater(fst.args({\"steps_per\": str(1e5)})))\n",
    "    monte_carlo.add(fst.MakeCriteriaWriter(fst.args({\"steps_per\": str(1e5), \"file_name\": \"lj_fh.txt\"})))\n",
    "    monte_carlo.add(fst.MakeEnergy(fst.args({\"file_name\": \"lj_en.txt\", \"steps_per_update\": \"1\",\n",
    "        \"steps_per_write\": str(1e5), \"multistate\": \"true\"})))\n",
    "    monte_carlo.set(fst.MakeCheckpoint(fst.args({\"file_name\": checkpoint_file_name, \"num_hours\": \"0.001\"})))\n",
    "    monte_carlo.run_until_complete()\n",
    "\n",
    "class TestFlatHistogramLJ(unittest.TestCase):\n",
    "    \"\"\"Test flat histogram grand canonical ensemble Monte Carlo simulations\"\"\"\n",
    "    def test_serial_5max(self):\n",
    "        \"\"\"Compare the free energies and potential energies with the NIST SRSW\n",
    "        https://www.nist.gov/programs-projects/nist-standard-reference-simulation-website\n",
    "        https://mmlapps.nist.gov/srs/LJ_PURE/eostmmc.htm\n",
    "        \"\"\"\n",
    "        # To emulate post-processing, obtain monte_carlo from checkpoint file\n",
    "        checkpoint_file_name='checkpoint.txt'\n",
    "        run_sample_lj_tm_mc(checkpoint_file_name)\n",
    "        monte_carlo = fst.MonteCarlo().deserialize(pyfeasst.read_checkpoint(checkpoint_file_name))\n",
    "\n",
    "        # To compare with previous values, make a deep copy of the FlatHistogram derived class\n",
    "        criteria = fst.FlatHistogram(monte_carlo.criteria())\n",
    "        print('lnpi energy')\n",
    "        for macro in range(criteria.num_states()):\n",
    "            self.assertAlmostEqual(\n",
    "                df[\"ln_prob_srsw\"][macro],\n",
    "                criteria.bias().ln_prob().value(macro),\n",
    "                delta=df[\"ln_prob_srsw_std\"][macro])\n",
    "            energy_analyzer = monte_carlo.analyze(monte_carlo.num_analyzers() - 1)\n",
    "            energy_accumulator = energy_analyzer.analyze(macro).accumulator()\n",
    "            stdev = (df[\"u_srsw_std\"][macro]**2 + energy_accumulator.block_stdev()**2)**(1./2.)\n",
    "            #print(criteria.bias().ln_prob().value(macro), energy_accumulator.average())\n",
    "            self.assertAlmostEqual(\n",
    "                df[\"u_srsw\"][macro],\n",
    "                energy_accumulator.average(),\n",
    "                delta=5*stdev)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "test_serial_5max (__main__.TestFlatHistogramLJ)\n",
      "Compare the free energies and potential energies with the NIST SRSW ... "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "lnpi energy\n",
      "CPU times: user 10.1 s, sys: 1.72 s, total: 11.8 s\n",
      "Wall time: 11.8 s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ok\n",
      "\n",
      "----------------------------------------------------------------------\n",
      "Ran 1 test in 11.764s\n",
      "\n",
      "OK\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<unittest.main.TestProgram at 0x7fbe30320100>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "unittest.main(argv=[''], verbosity=2, exit=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A number of files should also have been created.\n",
    "If the flat histogram method is sampling perfectly, the simulation performs a random walk along the macrostate.\n",
    "For larger ranges of macrostates, or for more difficult sampling cases, monitoring the macrostate can help you determine what conditions are preventing convergence.\n",
    "For example, a plot of the macrostate as a function of the number of attempts may look like the following:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>volume</th>\n",
       "      <th>p0</th>\n",
       "      <th>state</th>\n",
       "      <th>energy</th>\n",
       "      <th>attempt</th>\n",
       "      <th>TrialTranslate</th>\n",
       "      <th>tunable</th>\n",
       "      <th>TrialAdd</th>\n",
       "      <th>TrialRemove</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>-4.842120e-01</td>\n",
       "      <td>100000</td>\n",
       "      <td>0.945221</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>0.044758</td>\n",
       "      <td>0.044666</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.895160e-02</td>\n",
       "      <td>200000</td>\n",
       "      <td>0.965126</td>\n",
       "      <td>1.05000</td>\n",
       "      <td>0.716170</td>\n",
       "      <td>0.724496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.585090e-16</td>\n",
       "      <td>300000</td>\n",
       "      <td>0.829157</td>\n",
       "      <td>1.10250</td>\n",
       "      <td>0.805386</td>\n",
       "      <td>0.802693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>400000</td>\n",
       "      <td>0.804204</td>\n",
       "      <td>1.15763</td>\n",
       "      <td>0.814039</td>\n",
       "      <td>0.807408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-3.897400e-02</td>\n",
       "      <td>500000</td>\n",
       "      <td>0.810413</td>\n",
       "      <td>1.21551</td>\n",
       "      <td>0.811324</td>\n",
       "      <td>0.812772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.561560e-02</td>\n",
       "      <td>600000</td>\n",
       "      <td>0.812194</td>\n",
       "      <td>1.27628</td>\n",
       "      <td>0.809864</td>\n",
       "      <td>0.813974</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>700000</td>\n",
       "      <td>0.802427</td>\n",
       "      <td>1.34010</td>\n",
       "      <td>0.807582</td>\n",
       "      <td>0.809661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.382730e-15</td>\n",
       "      <td>800000</td>\n",
       "      <td>0.797931</td>\n",
       "      <td>1.40710</td>\n",
       "      <td>0.812250</td>\n",
       "      <td>0.807970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>-2.739090e-02</td>\n",
       "      <td>900000</td>\n",
       "      <td>0.812754</td>\n",
       "      <td>1.47746</td>\n",
       "      <td>0.805339</td>\n",
       "      <td>0.816374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>-2.948100e-01</td>\n",
       "      <td>1000000</td>\n",
       "      <td>0.800170</td>\n",
       "      <td>1.55133</td>\n",
       "      <td>0.808636</td>\n",
       "      <td>0.816741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-4.932320e-01</td>\n",
       "      <td>1100000</td>\n",
       "      <td>0.801891</td>\n",
       "      <td>1.62889</td>\n",
       "      <td>0.812297</td>\n",
       "      <td>0.805328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>-2.863500e-02</td>\n",
       "      <td>1200000</td>\n",
       "      <td>0.806826</td>\n",
       "      <td>1.71034</td>\n",
       "      <td>0.801599</td>\n",
       "      <td>0.812588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-9.790360e-01</td>\n",
       "      <td>1300000</td>\n",
       "      <td>0.798768</td>\n",
       "      <td>1.79586</td>\n",
       "      <td>0.812165</td>\n",
       "      <td>0.810915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>-8.857210e-01</td>\n",
       "      <td>1400000</td>\n",
       "      <td>0.804139</td>\n",
       "      <td>1.88565</td>\n",
       "      <td>0.808453</td>\n",
       "      <td>0.809737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>1500000</td>\n",
       "      <td>0.803236</td>\n",
       "      <td>1.97993</td>\n",
       "      <td>0.810836</td>\n",
       "      <td>0.813167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>1600000</td>\n",
       "      <td>0.802837</td>\n",
       "      <td>2.07893</td>\n",
       "      <td>0.813109</td>\n",
       "      <td>0.811320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-6.245010e-01</td>\n",
       "      <td>1700000</td>\n",
       "      <td>0.791328</td>\n",
       "      <td>2.18287</td>\n",
       "      <td>0.810612</td>\n",
       "      <td>0.805540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>-2.346770e-02</td>\n",
       "      <td>1800000</td>\n",
       "      <td>0.803976</td>\n",
       "      <td>2.29202</td>\n",
       "      <td>0.809227</td>\n",
       "      <td>0.809344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>-5.451660e-03</td>\n",
       "      <td>1900000</td>\n",
       "      <td>0.802876</td>\n",
       "      <td>2.40662</td>\n",
       "      <td>0.813085</td>\n",
       "      <td>0.810525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>2000000</td>\n",
       "      <td>0.798925</td>\n",
       "      <td>2.52695</td>\n",
       "      <td>0.805151</td>\n",
       "      <td>0.809126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>2100000</td>\n",
       "      <td>0.804122</td>\n",
       "      <td>2.65330</td>\n",
       "      <td>0.811004</td>\n",
       "      <td>0.814742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-3.392890e-02</td>\n",
       "      <td>2200000</td>\n",
       "      <td>0.806313</td>\n",
       "      <td>2.78596</td>\n",
       "      <td>0.808257</td>\n",
       "      <td>0.816642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>2300000</td>\n",
       "      <td>0.801029</td>\n",
       "      <td>2.92526</td>\n",
       "      <td>0.812057</td>\n",
       "      <td>0.813534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>-5.025780e-02</td>\n",
       "      <td>2400000</td>\n",
       "      <td>0.801760</td>\n",
       "      <td>3.07152</td>\n",
       "      <td>0.806721</td>\n",
       "      <td>0.816102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-3.919390e-16</td>\n",
       "      <td>2500000</td>\n",
       "      <td>0.797248</td>\n",
       "      <td>3.22510</td>\n",
       "      <td>0.809901</td>\n",
       "      <td>0.809179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.153720e-02</td>\n",
       "      <td>2600000</td>\n",
       "      <td>0.796102</td>\n",
       "      <td>3.38635</td>\n",
       "      <td>0.805822</td>\n",
       "      <td>0.813047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-7.158450e-01</td>\n",
       "      <td>2700000</td>\n",
       "      <td>0.795828</td>\n",
       "      <td>3.55567</td>\n",
       "      <td>0.812555</td>\n",
       "      <td>0.806236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>2800000</td>\n",
       "      <td>0.800290</td>\n",
       "      <td>3.73346</td>\n",
       "      <td>0.816436</td>\n",
       "      <td>0.807361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.403700e-15</td>\n",
       "      <td>2900000</td>\n",
       "      <td>0.798101</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.813907</td>\n",
       "      <td>0.808259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>-5.451660e-03</td>\n",
       "      <td>3000000</td>\n",
       "      <td>0.792579</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.815649</td>\n",
       "      <td>0.807352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.869920e-15</td>\n",
       "      <td>3100000</td>\n",
       "      <td>0.801944</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.814166</td>\n",
       "      <td>0.814424</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>3200000</td>\n",
       "      <td>0.799641</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.812519</td>\n",
       "      <td>0.813613</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>3300000</td>\n",
       "      <td>0.801104</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.808750</td>\n",
       "      <td>0.811862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>3400000</td>\n",
       "      <td>0.796212</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.814829</td>\n",
       "      <td>0.811377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-9.691840e-03</td>\n",
       "      <td>3500000</td>\n",
       "      <td>0.796318</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.811054</td>\n",
       "      <td>0.812705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>3600000</td>\n",
       "      <td>0.792727</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.812807</td>\n",
       "      <td>0.812043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>3700000</td>\n",
       "      <td>0.796823</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.807557</td>\n",
       "      <td>0.815023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>3800000</td>\n",
       "      <td>0.798743</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.814227</td>\n",
       "      <td>0.808711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>3900000</td>\n",
       "      <td>0.800905</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.810020</td>\n",
       "      <td>0.809631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>4000000</td>\n",
       "      <td>0.802772</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.808072</td>\n",
       "      <td>0.814926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-8.496510e-01</td>\n",
       "      <td>4100000</td>\n",
       "      <td>0.804103</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.811957</td>\n",
       "      <td>0.814823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>-5.451660e-03</td>\n",
       "      <td>4200000</td>\n",
       "      <td>0.799681</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.811460</td>\n",
       "      <td>0.814251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>-1.305670e-01</td>\n",
       "      <td>4300000</td>\n",
       "      <td>0.792278</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.812281</td>\n",
       "      <td>0.811826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>4400000</td>\n",
       "      <td>0.788397</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.812445</td>\n",
       "      <td>0.802357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>512</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>-3.442200e-02</td>\n",
       "      <td>4500000</td>\n",
       "      <td>0.798416</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.811130</td>\n",
       "      <td>0.809585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.422960e-03</td>\n",
       "      <td>4600000</td>\n",
       "      <td>0.795141</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.811051</td>\n",
       "      <td>0.810306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>512</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>-3.450180e-01</td>\n",
       "      <td>4700000</td>\n",
       "      <td>0.801046</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.809256</td>\n",
       "      <td>0.808248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>4800000</td>\n",
       "      <td>0.797152</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.814963</td>\n",
       "      <td>0.811447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-3.897710e-16</td>\n",
       "      <td>4900000</td>\n",
       "      <td>0.799850</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.810902</td>\n",
       "      <td>0.811758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>512</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-9.691840e-03</td>\n",
       "      <td>5000000</td>\n",
       "      <td>0.794192</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.811916</td>\n",
       "      <td>0.811046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>512</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.473500e-02</td>\n",
       "      <td>5100000</td>\n",
       "      <td>0.801362</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.804795</td>\n",
       "      <td>0.813922</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>512</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>5200000</td>\n",
       "      <td>0.797702</td>\n",
       "      <td>3.92013</td>\n",
       "      <td>0.807221</td>\n",
       "      <td>0.813581</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    volume  p0  state        energy  attempt  TrialTranslate  tunable  \\\n",
       "0      512   5      5 -4.842120e-01   100000        0.945221  1.00000   \n",
       "1      512   3      3 -1.895160e-02   200000        0.965126  1.05000   \n",
       "2      512   0      0  4.585090e-16   300000        0.829157  1.10250   \n",
       "3      512   1      1 -6.057400e-04   400000        0.804204  1.15763   \n",
       "4      512   4      4 -3.897400e-02   500000        0.810413  1.21551   \n",
       "5      512   2      2 -2.561560e-02   600000        0.812194  1.27628   \n",
       "6      512   2      2 -2.422960e-03   700000        0.802427  1.34010   \n",
       "7      512   0      0  8.382730e-15   800000        0.797931  1.40710   \n",
       "8      512   3      3 -2.739090e-02   900000        0.812754  1.47746   \n",
       "9      512   3      3 -2.948100e-01  1000000        0.800170  1.55133   \n",
       "10     512   4      4 -4.932320e-01  1100000        0.801891  1.62889   \n",
       "11     512   5      5 -2.863500e-02  1200000        0.806826  1.71034   \n",
       "12     512   4      4 -9.790360e-01  1300000        0.798768  1.79586   \n",
       "13     512   5      5 -8.857210e-01  1400000        0.804139  1.88565   \n",
       "14     512   2      2 -2.422960e-03  1500000        0.803236  1.97993   \n",
       "15     512   2      2 -2.422960e-03  1600000        0.802837  2.07893   \n",
       "16     512   4      4 -6.245010e-01  1700000        0.791328  2.18287   \n",
       "17     512   5      5 -2.346770e-02  1800000        0.803976  2.29202   \n",
       "18     512   3      3 -5.451660e-03  1900000        0.802876  2.40662   \n",
       "19     512   2      2 -2.422960e-03  2000000        0.798925  2.52695   \n",
       "20     512   2      2 -2.422960e-03  2100000        0.804122  2.65330   \n",
       "21     512   4      4 -3.392890e-02  2200000        0.806313  2.78596   \n",
       "22     512   1      1 -6.057400e-04  2300000        0.801029  2.92526   \n",
       "23     512   5      5 -5.025780e-02  2400000        0.801760  3.07152   \n",
       "24     512   0      0 -3.919390e-16  2500000        0.797248  3.22510   \n",
       "25     512   2      2 -1.153720e-02  2600000        0.796102  3.38635   \n",
       "26     512   4      4 -7.158450e-01  2700000        0.795828  3.55567   \n",
       "27     512   1      1 -6.057400e-04  2800000        0.800290  3.73346   \n",
       "28     512   0      0  4.403700e-15  2900000        0.798101  3.92013   \n",
       "29     512   3      3 -5.451660e-03  3000000        0.792579  3.92013   \n",
       "30     512   0      0 -1.869920e-15  3100000        0.801944  3.92013   \n",
       "31     512   1      1 -6.057400e-04  3200000        0.799641  3.92013   \n",
       "32     512   2      2 -2.422960e-03  3300000        0.801104  3.92013   \n",
       "33     512   1      1 -6.057400e-04  3400000        0.796212  3.92013   \n",
       "34     512   4      4 -9.691840e-03  3500000        0.796318  3.92013   \n",
       "35     512   2      2 -2.422960e-03  3600000        0.792727  3.92013   \n",
       "36     512   2      2 -2.422960e-03  3700000        0.796823  3.92013   \n",
       "37     512   1      1 -6.057400e-04  3800000        0.798743  3.92013   \n",
       "38     512   2      2 -2.422960e-03  3900000        0.800905  3.92013   \n",
       "39     512   1      1 -6.057400e-04  4000000        0.802772  3.92013   \n",
       "40     512   4      4 -8.496510e-01  4100000        0.804103  3.92013   \n",
       "41     512   3      3 -5.451660e-03  4200000        0.799681  3.92013   \n",
       "42     512   5      5 -1.305670e-01  4300000        0.792278  3.92013   \n",
       "43     512   2      2 -2.422960e-03  4400000        0.788397  3.92013   \n",
       "44     512   3      3 -3.442200e-02  4500000        0.798416  3.92013   \n",
       "45     512   2      2 -2.422960e-03  4600000        0.795141  3.92013   \n",
       "46     512   5      5 -3.450180e-01  4700000        0.801046  3.92013   \n",
       "47     512   1      1 -6.057400e-04  4800000        0.797152  3.92013   \n",
       "48     512   0      0 -3.897710e-16  4900000        0.799850  3.92013   \n",
       "49     512   4      4 -9.691840e-03  5000000        0.794192  3.92013   \n",
       "50     512   2      2 -1.473500e-02  5100000        0.801362  3.92013   \n",
       "51     512   1      1 -6.057400e-04  5200000        0.797702  3.92013   \n",
       "\n",
       "    TrialAdd  TrialRemove  \n",
       "0   0.044758     0.044666  \n",
       "1   0.716170     0.724496  \n",
       "2   0.805386     0.802693  \n",
       "3   0.814039     0.807408  \n",
       "4   0.811324     0.812772  \n",
       "5   0.809864     0.813974  \n",
       "6   0.807582     0.809661  \n",
       "7   0.812250     0.807970  \n",
       "8   0.805339     0.816374  \n",
       "9   0.808636     0.816741  \n",
       "10  0.812297     0.805328  \n",
       "11  0.801599     0.812588  \n",
       "12  0.812165     0.810915  \n",
       "13  0.808453     0.809737  \n",
       "14  0.810836     0.813167  \n",
       "15  0.813109     0.811320  \n",
       "16  0.810612     0.805540  \n",
       "17  0.809227     0.809344  \n",
       "18  0.813085     0.810525  \n",
       "19  0.805151     0.809126  \n",
       "20  0.811004     0.814742  \n",
       "21  0.808257     0.816642  \n",
       "22  0.812057     0.813534  \n",
       "23  0.806721     0.816102  \n",
       "24  0.809901     0.809179  \n",
       "25  0.805822     0.813047  \n",
       "26  0.812555     0.806236  \n",
       "27  0.816436     0.807361  \n",
       "28  0.813907     0.808259  \n",
       "29  0.815649     0.807352  \n",
       "30  0.814166     0.814424  \n",
       "31  0.812519     0.813613  \n",
       "32  0.808750     0.811862  \n",
       "33  0.814829     0.811377  \n",
       "34  0.811054     0.812705  \n",
       "35  0.812807     0.812043  \n",
       "36  0.807557     0.815023  \n",
       "37  0.814227     0.808711  \n",
       "38  0.810020     0.809631  \n",
       "39  0.808072     0.814926  \n",
       "40  0.811957     0.814823  \n",
       "41  0.811460     0.814251  \n",
       "42  0.812281     0.811826  \n",
       "43  0.812445     0.802357  \n",
       "44  0.811130     0.809585  \n",
       "45  0.811051     0.810306  \n",
       "46  0.809256     0.808248  \n",
       "47  0.814963     0.811447  \n",
       "48  0.810902     0.811758  \n",
       "49  0.811916     0.811046  \n",
       "50  0.804795     0.813922  \n",
       "51  0.807221     0.813581  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_csv(\"lj.txt\", header=0).dropna(axis='columns')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that states are index integer values starting from 0 (e.g., 0, 1, 2, ..., criteria.num_states() - 1)\n",
    "The state and macrostate happen to be the same when the minimum macrostate is 0, and the macrostate is the integer number of particles.\n",
    "But if the minimum macrostate was 1, then state 0 would correspond to macrostate 1.0.\n",
    "Obtain an arbitrary macrostate value from the state as follows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "state macrostate\n",
      "0 0.0\n",
      "1 1.0\n",
      "2 2.0\n",
      "3 3.0\n",
      "4 4.0\n",
      "5 5.0\n"
     ]
    }
   ],
   "source": [
    "monte_carlo = fst.MonteCarlo().deserialize(pyfeasst.read_checkpoint(\"checkpoint.txt\"))\n",
    "criteria = fst.FlatHistogram(monte_carlo.criteria())\n",
    "print('state macrostate')\n",
    "for state in range(criteria.num_states()):\n",
    "    print(state, criteria.macrostate().value(state))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Many simulation parameters may be obtained from the checkpoint file to automate your analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "volume 512.0\n",
      "beta 0.6666666666666666\n",
      "beta_mu -1.5682139999999998\n",
      "macro_min 0.0\n",
      "macro_max 5.0\n",
      "macro_max 5.0\n"
     ]
    }
   ],
   "source": [
    "print('volume', monte_carlo.configuration().domain().volume())\n",
    "print('beta', monte_carlo.criteria().beta())\n",
    "print('beta_mu', monte_carlo.criteria().beta_mu())\n",
    "print('macro_min', criteria.macrostate().value(0))  # monte_carlo.critera() doesn't know macrostate. Use copy of derived class\n",
    "print('macro_max', criteria.macrostate().value(criteria.num_states() - 1))\n",
    "print('macro_max', criteria.macrostate().histogram().center_of_last_bin())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The energy of each macrostate may also be compared with the published values in the NIST SRSW."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u</th>\n",
       "      <th>u_std</th>\n",
       "      <th>u_srsw</th>\n",
       "      <th>u_srsw_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.779125e-16</td>\n",
       "      <td>3.411879e-16</td>\n",
       "      <td>-2.312265e-10</td>\n",
       "      <td>6.689238e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-6.057400e-04</td>\n",
       "      <td>3.074653e-12</td>\n",
       "      <td>-6.057402e-04</td>\n",
       "      <td>6.709198e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-3.026077e-02</td>\n",
       "      <td>1.660217e-04</td>\n",
       "      <td>-3.057422e-02</td>\n",
       "      <td>9.649147e-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-8.956044e-02</td>\n",
       "      <td>3.142392e-04</td>\n",
       "      <td>-8.992832e-02</td>\n",
       "      <td>1.387472e-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-1.766038e-01</td>\n",
       "      <td>5.066156e-04</td>\n",
       "      <td>-1.784571e-01</td>\n",
       "      <td>3.315245e-05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-2.934080e-01</td>\n",
       "      <td>1.648603e-03</td>\n",
       "      <td>-2.961920e-01</td>\n",
       "      <td>1.348791e-05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              u         u_std        u_srsw    u_srsw_std\n",
       "0  4.779125e-16  3.411879e-16 -2.312265e-10  6.689238e-10\n",
       "1 -6.057400e-04  3.074653e-12 -6.057402e-04  6.709198e-10\n",
       "2 -3.026077e-02  1.660217e-04 -3.057422e-02  9.649147e-06\n",
       "3 -8.956044e-02  3.142392e-04 -8.992832e-02  1.387472e-04\n",
       "4 -1.766038e-01  5.066156e-04 -1.784571e-01  3.315245e-05\n",
       "5 -2.934080e-01  1.648603e-03 -2.961920e-01  1.348791e-05"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "en = pd.read_csv(\"lj_en.txt\").rename(columns={\"average\": \"u\", \"block_stdev\": \"u_std\"})\n",
    "pd.concat([pd.DataFrame(en[[\"u\", \"u_std\"]]), df[[\"u_srsw\", \"u_srsw_std\"]]], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You may also compare the natural logarithm of the macrostate probability"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ln_prob_srsw</th>\n",
       "      <th>ln_prob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-18.707570</td>\n",
       "      <td>-18.710519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-14.037373</td>\n",
       "      <td>-14.040327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-10.050312</td>\n",
       "      <td>-10.052388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-6.458921</td>\n",
       "      <td>-6.460596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-3.145637</td>\n",
       "      <td>-3.146210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-0.045677</td>\n",
       "      <td>-0.045649</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   ln_prob_srsw    ln_prob\n",
       "0    -18.707570 -18.710519\n",
       "1    -14.037373 -14.040327\n",
       "2    -10.050312 -10.052388\n",
       "3     -6.458921  -6.460596\n",
       "4     -3.145637  -3.146210\n",
       "5     -0.045677  -0.045649"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.concat([df[\"ln_prob_srsw\"], pd.read_csv(\"lj_fh.txt\", header=3)['ln_prob']], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The macrostate probability distribution depends upon the choice of the chemical potential, but can be reweighted to different chemical potentials."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Did this tutorial work as expected? Did you find any inconsistencies or have any comments? Please [contact](../../../CONTACT.rst) us. Any feedback is appreciated!"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
